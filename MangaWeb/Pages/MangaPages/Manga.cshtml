@page "{handler?}"
@using MangaWeb.Models;
@model MangaWeb.Pages.MangaPages.MangaModel
@{
    var ranked = Model.Manga.Ranked == -1 ? Model.Localizer["Unknow"] : Model.Manga.Ranked.ToString();
    var score = Model.Manga.Score == -1 ? Model.Localizer["Unknow"] : Model.Manga.Score.ToString();
    var ruLinksToRead = Model.Manga.ReadLinks?.Where(x => x.Contains("mangalib"));
    var engLinksToRead = Model.Manga.ReadLinks?.Where(x => !x.Contains("mangalib"));
    ViewData["Title"] = Model.Manga.OriginTitle;
}

<div>
    <h4>@Model.Localizer["Manga"]</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Model.Localizer["Title"]
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Manga.OriginTitle)
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Image"]
        </dt>
        <dd class="col-sm-10">
            <img src="@Model.Manga.MangaImageUrl" style="height:320px;width:225px;">
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Type"]
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Manga.Type)
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Score"]

        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => score)

        </dd>
        @if (Model.Manga.Language == Models.Language.en)
        {
            <dt class="col-sm-2">
                @Model.Localizer["Popularity"]

            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Manga.Popularity)

            </dd>
            <dt class="col-sm-2">
                @Model.Localizer["Ranked"]

            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => ranked)
            </dd>
        }
        @if (Model.Manga.Status == MangaStatus.Finished
        || Model.Manga.Status == MangaStatus.Издано)
        {
            <dt class="col-sm-2">
                @Model.Localizer["Volumes"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Manga.CountOfVolume)
            </dd>
            <dt class="col-sm-2">
                @Model.Localizer["Chapters"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model =>  model.Manga.CountOfChapters)
            </dd>
        }
        <dt class="col-sm-2">
            @Model.Localizer["Published"]
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Manga.Published)
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Status"].Value
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Manga.Status)
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Description"]
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Manga.Description)
        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Genres"]
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ",Model.Manga.Genres)
        </dd>
        @if (Model.Manga.ReadLinks != null)
        {
            <dt class="col-sm-2">
                @Model.Localizer["LinksToRead"]
            </dt>
            <dd class="col-sm-10">
                @if (ruLinksToRead.Count() != 0)
                {
                    <big>@Model.Localizer["Russian"]</big>

                    <br />
                    for (short i = 0; i < ruLinksToRead.Count(); ++i)
                    {
                        <a href="@ruLinksToRead.ElementAt(i)">Read - @(i + 1) source</a>
                    }
                }

                @if (engLinksToRead.Count() != 0)
                {
                    <br />
                    @Model.Localizer["English"]
                    <br />
                    for (short i = 0; i < engLinksToRead.Count(); ++i)
                    {
                        <a href="@engLinksToRead.ElementAt(i)">Read - @(i + 1) source</a>
                    }
                }

            </dd>
        }
        <dt class="col-sm-2">
            @Model.Localizer["Characters"]
        </dt>

        <dd class="col-sm-10">

            @*<component>@(await Html.RenderComponentAsync<MangaPages.PartialViewes.CharactersPatial>(RenderMode.ServerPrerendered, new { FullCharacters = Model.FullManga.Characters }))</component>*@
            @*<component type="typeof(MangaWeb.Pages.MangaPages.PartialViewes.CharactersPatial)" param-FullCharacters="Model.FullManga.Characters" render-mode="ServerPrerendered" />
            *@
            <partial name="PartialViewes/_CharactersPartial" />

        </dd>
        <dt class="col-sm-2">
            @Model.Localizer["Authors"]
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ", Model.Manga.Authors)
        </dd>
    </dl>
    <hr />

    <form method="get">
        <input type="hidden" name="id" value="@Model.Manga.Id" />


        <div class="alignInLineBlock whiteText20">
            @Model.Localizer["AddToFavorite"]

            <button class="favButton" asp-page-handler="AddToFavorite">
                <div class="@(Model.CurrentUserFavoritesManga.Contains(Model.Manga.Id) ? "iconFilled" : "icon")">
                    <svg class="heart-main" viewBox="0 0 512 512" width="100" title="heart">
                        <path d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z" />
                    </svg>
                    <svg class="heart-background" viewBox="0 0 512 512" width="100" title="heart">
                        <path d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z" />
                    </svg>
                </div>
            </button>
            <input asp-page-handler="DownloadData" type="submit" class="btn btn-lg btn-primary" value=" @Model.Localizer["Download"]" />
            @if (Model.CurrentUser?.Role == Areas.Identity.Data.Role.Admin)
            {
                <input asp-page-handler="EditManga" type="submit" class="btn btn-lg btn-primary" value=" @Model.Localizer["Edit"]" />
                <input asp-page-handler="MangaDeletion" type="submit" class="btn btn-lg btn-primary" value=" @Model.Localizer["Delete"]" />
                <input asp-page-handler="UpdateManga" type="submit" class="btn btn-lg btn-primary" value=" @Model.Localizer["UpdateInfo"]" />
            }
        </div>
    </form>
    <br />
    <form method="post">

        <input type="hidden" name="id" value="@Model.Manga.Id" />
        <textarea class="comment" oninput="auto_grow(this)" placeholder="@Model.Localizer["WriteYourCom"]" name="body"></textarea>
        <br>
        <input asp-page-handler="CreateComment" type="submit" class="btn btn-lg btn-primary" value="@Model.Localizer["Send"]" />
    </form>
    <br />
    @foreach (var comment in Model.Comments.Reverse())
    {
        var user = await Model._userManager.FindByIdAsync(comment?.AuthorId);
        <div>
            <h4><a asp-page="../User" asp-route-userName="@user.UserName"><img class="headerImage" src="@user.ProfileImage" /></a>  @user.UserName</h4><h5>@comment.Body</h5><h6>@comment.Date.ToShortTimeString() @comment.Date.ToShortDateString()</h6>
        </div>
    }
</div>