@page "{handler?}"
@model MangaWeb.Pages.MangaPages.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_Layout";
    var statusFinished = string.Empty;
    var volumesUnknown = string.Empty;
    var chaptersUnknown = string.Empty;
    ViewData["Title"] = "Manga";
}
<style>


    .loadMore {
        margin-left: auto;
        margin-right: auto;
    }
</style>
<div class="background">
    <form method="get" class="whiteText20">
        @Model.Localizer["Title"]: <input id="SearchString" name="SearchString" class="descTextArea" style="width:250px" asp-for="SearchString" />
        <input asp-page-handler="Search" class="btn btn-lg btn-primary" type="submit" value="@Model.Localizer["Find"]" />
    </form>

        <partial name="PartialViewes/_OrderPartial" />
    
    <div class="mangas">
        <h2 class="text-black">@Model.Localizer["Manga"].Value</h2>
        <div id="mangaList">
            <partial name="PartialViewes/_MangaListPartial" model="@Model.Manga" />
        </div>

        <div style="width:100%; display:flex; justify-content: center;
  align-items: center;">
            @if (Model.MangaCount > 28)
            {
                <button class="btn btn-primary loadMore" id="loadMoreButton" onclick="loadMore()">
                    @Model.Localizer["LoadMore"]
                </button>
            }
        </div>


    </div>


</div>

<script>
    var index = 28; // the index to start loading from
    const parser = new DOMParser();
    function loadMore() {
        index += 28;
        $.ajax({
            type: 'GET',
            data: { mangaCount: index },
            url: '/MangaPages?handler=LoadMore',
            success: function (data) {
                $('#mangaList').html(data);
                var mangaElementsCount = document.getElementsByClassName("mangaInforOnHover").length;
                var but = document.getElementById('loadMoreButton');
                $.ajax({
                    type: "GET",
                    url: '/MangaPages/MangaCount',
                    success: function (response) {
                        console.log(response);
                        if (mangaElementsCount === response) {
                            but.hidden = true;
                        } else {
                            but.hidden = false;
                        }
                    }
                });
            }
        });
    }

    function order() {
        var searchString = document.getElementById("SearchString").value;

        var option = document.getElementById("options").value;

        var elementCollection = document.getElementsByName("Geners");
        var elementArray = Array.prototype.slice.call(elementCollection, 0);
        var genres = elementArray.filter(x => x.checked).map(x => x.id.toString());

        var chapterFrom = document.getElementById("CountOfChaptersFrom").value;
        chapterFrom === "" ? null : chapterFrom;
        var chapterTo = document.getElementById("CountOfChaptersTo").value;
        chapterTo === "" ? null : chapterTo;

        var scoreFrom = document.getElementById("ScoreFrom").value;
        scoreFrom === "" ? null : scoreFrom;
        var scoreTo = document.getElementById("ScoreTo").value;
        scoreTo === "" ? null : scoreTo;

        var yearFrom = document.getElementById("YearFrom").value;
        yearFrom === "" ? null : yearFrom;
        var yearTo = document.getElementById("YearTo").value;
        yearFrom === "" ? null : yearFrom;

        var statusColl = document.getElementsByName("Status");
        var statusArray = Array.prototype.slice.call(statusColl, 0);
        var status = statusArray.filter(x => x.checked)[0];
        status = status === undefined ? "" : status.value;
        var langColl = document.getElementsByName("Language");
        var langArray = Array.prototype.slice.call(langColl, 0);
        var lang = langArray.filter(x => x.checked)[0];
        lang = lang === undefined ? "" : lang.value;
        $.ajax({
            type: 'GET',
            data: {
                SearchString: searchString, Option: option, Geners: JSON.stringify(genres), CountOfChaptersFrom: chapterFrom, CountOfChaptersTo: chapterTo,
                YearFrom: yearFrom, YearTo: yearTo, ScoreFrom: scoreFrom, ScoreTo: scoreTo, Status: status, Language: lang
            },
            url: '/MangaPages/Order',
            success: function (data) {
                $('#mangaList').html(data);
                var mangaElementsCount = document.getElementsByClassName("mangaInforOnHover").length;
                var but = document.getElementById('loadMoreButton');
                $.ajax({
                    type: "GET",
                    url: '/MangaPages/MangaCount',
                    success: function (response) {
                        console.log(response);
                        if (mangaElementsCount === response) {
                            but.hidden = true;
                        } else {
                            but.hidden = false;
                        }
                    }
                });
            }
        });
    }

</script>

