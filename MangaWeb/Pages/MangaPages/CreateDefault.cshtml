@page
@model MangaWeb.Pages.MangaPages.CreateDefaultModel

@{
    ViewData["Title"] = "Create default";
}
<style>
    .status {
        font-size: 24px;
        font-weight: 700;
        display: inline-block;
        color: rgb(50,50,50);
        background-color: rgb(210,210,210);
        border: 0;
        margin: 2px;
    }

    .inputModel {
        width: auto;
    }
</style>

<h1>@Model.Localizer["Create"]</h1>

<h4>@Model.Localizer["Manga"]</h4>
<hr />

@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-danger" style="font-size: 20px;font-weight:600;">
        <strong>Fail </strong>
        @TempData["AlertMessage"]
    </div>
}

<div class="row">
    <div class="col-md-8">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.OriginTitle" class="control-label">@Model.Localizer["Title"]</label>
                <input asp-for="Input.OriginTitle" id="OriginTitle" class="form-control" />
                <span asp-validation-for="Input.OriginTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.MangaImageUrl" class="control-label">@Model.Localizer["Image"]</label>
                <input asp-for="Input.ImageFile" accept=".jpg, .jpeg, .png" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Input.Description" class="control-label">@Model.Localizer["Description"]</label>
                <br />
                <textarea class="descTextArea" oninput="auto_grow(this)" asp-for="Input.Description" id="Description" class="form-control"></textarea>
                <span asp-validation-for="Input.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Genres" class="control-label">@Model.Localizer["Genres"]</label>
                <div id="genres" style="display: inline-block;"> </div>
                <input id="genreAsp" asp-for="Input.Genres" readonly class="form-control" />
                <input id="genreInput" class="form-control" />
                <input class="createButton btn btn-primary" onclick="AddToList()" type="button" value="@Model.Localizer["Add"]" />
                <input class="createButton btn btn-primary" onclick="RemoveLastFromList()" type="button" value="@Model.Localizer["RemoveLast"]" />
            </div>
            <div class="form-group">
                <label asp-for="Input.Published" class="control-label">@Model.Localizer["Published"]</label>
                <input asp-for="Input.Published" id="Published" class="form-control" />
                <span asp-validation-for="Input.Published" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.CountOfVolume" class="control-label">@Model.Localizer["Volumes"]</label>
                <input asp-for="Input.CountOfVolume" id="CountOfVolume" class="form-control" />
                <span asp-validation-for="Input.CountOfVolume" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.CountOfChapters" class="control-label">@Model.Localizer["Chapters"]</label>
                <input asp-for="Input.CountOfChapters" id="CountOfChapters" class="form-control" />
                <span asp-validation-for="Input.CountOfChapters" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Score" class="control-label">@Model.Localizer["Score"]</label>
                <input asp-for="Input.Score" id="Score" class="form-control" />
                <span asp-validation-for="Input.Score" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Ranked" class="control-label">@Model.Localizer["Ranked"]</label>
                <input asp-for="Input.Ranked" id="Ranked" class="form-control" />
                <span asp-validation-for="Input.Ranked" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Popularity" class="control-label">@Model.Localizer["Popularity"]</label>
                <input asp-for="Input.Popularity" id="Popularity" class="form-control" />
                <span asp-validation-for="Input.Popularity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Status" class="control-label">@Model.Localizer["Status"]</label>
                <br />
                <input id="Status" value="" asp-for="Input.Status" hidden />
                <input style="" class="status" onclick="StatusChecked('@Model.Localizer["Publishing"]')" id="pub" value="@Model.Localizer["Publishing"]" readonly />
                <input style="" class="status" onclick="StatusChecked('@Model.Localizer["Finished"]')" id="fin" value="@Model.Localizer["Finished"]" readonly />
                <span asp-validation-for="Input.Popularity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Authors" class="control-label">@Model.Localizer["Authors"]</label>
                <div id="autors" style="display: inline-block;"> </div>
                <input id="autorAsp" asp-for="Input.Authors" readonly class="form-control" />
                <input id="autorInput" class="form-control" />
                <input class="createButton btn btn-primary" onclick="AddToListAut()" type="button" value="@Model.Localizer["Add"]" />
                <input class="createButton btn btn-primary" onclick="RemoveLastFromListAut()" type="button" value="@Model.Localizer["RemoveLast"]" />
            </div>
            <div class="form-group">
                <label asp-for="Input.YearOfIssue" class="control-label">@Model.Localizer["YearOfIssue"]</label>
                <input asp-for="Input.YearOfIssue" id="YearOfIssue" class="form-control" />
                <span asp-validation-for="Input.YearOfIssue" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="@Model.Localizer["Create"]" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">@Model.Localizer["Back"]</a>
</div>


<script>
    var genres = [];
    var autors = [];
    function AddToList() {
        var element = document.getElementById("genreInput");
        genres.push(element.value);
        element.value = "";
        UpdateView();
    }
    function RemoveLastFromList() {
        genres.pop();
        UpdateView();
    }
    function UpdateView() {
        var res = document.getElementById("genreAsp");
        res.ariaReadOnly = false;
        res.value = "";
        res.value += genres.join(",");
        res.ariaReadOnly = true;

    }
    function AddToListAut() {
        var element = document.getElementById("autorInput");
        autors.push(element.value);
        element.value = "";
        UpdateViewAut();
    }
    function RemoveLastFromListAut() {
        autors.pop();
        UpdateViewAut();
    }

    function UpdateViewAut() {
        var res = document.getElementById("autorAsp");
        res.ariaReadOnly = false;
        res.value = "";
        res.value += autors.join(",");
        res.ariaReadOnly = true;
    }

    function StatusChecked(status) {
        var els = document.getElementsByClassName("status");

        for (var i = 0; i < els.length; ++i) {
            if (els[i].value === status) {
                els[i].style = "color:rgb(210,210,210);background-color:rgb(50, 50, 50)";
                document.getElementById("Status").innerText = status.toString();
                document.getElementById("Status").value = status.toString();
            }
            else {
                els[i].style = "color: rgb(50, 50, 50); background-color: rgb(210, 210, 210);";
            }
        }

    }

</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
