@page "{handler?}"
@model MangaWeb.Pages.Manga_s_.IndexModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Index";
    var statusFinished = "";
    var volumesUnknown = "";
    var chaptersUnknown = "";
}

<h1>@ViewData["Title"]</h1>


<p>
    <a asp-page="Create">Create New</a>
</p>
<form>
    <p>
        <select asp-for="MangaGenre" asp-items="Model.GenersSelectedList">
            <option value="">All</option>
        </select>
        Title: <input asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>

</form>
<div class="background">
    <aside class="rightOptions">

        <form class="whiteText20" method="get">
            Order by:
            <select name="Option" asp-items="Model.OrderOptions">
                <option>No option</option>
            </select>
            <br />
            <div onclick="genersLinkClick()" id="genersLink" class="genersLinkDark whiteText20">Geners<i id="arrow" class="arrow down"></i></div>

            <div id="genersSelector" style="display: none;" class="genersSelector">
                @for(var i =0; i< Model.Genres.Count;++i)
                {
                    <div class="generToSelect">
                        <input id="@Model.Genres[i]" class="generCheckBox" name="Geners" value="@Model.Genres[i]" type="checkbox" />
                        <label for="@Model.Genres[i]">@Model.Genres[i]</label>
                    </div>
                }
            </div>
             <div id="scoresSelector" class="scoresSelector">
                Chapters<br />
                <input  type="text" name="CountOfChaptersFrom" placeholder="From" class="orderInput" />
                <span>—</span>
                <input type="text" name="CountOfChaptersTo" placeholder="To" class="orderInput" />
            </div>
            <div id="scoresSelector" class="scoresSelector">
                Score<br />
                <input  type="text" name="ScoreFrom" placeholder="From" class="orderInput" />
                <span>—</span>
                <input type="text" name="ScoreTo" placeholder="To" class="orderInput" />
            </div>
            <div id="genersSelector" class="yearsSelector">
               Year<br />
                <input type="text" name="YearFrom" placeholder="From" class="orderInput" />
                <span>—</span>
                <input type="text" name="YearTo" placeholder="To" class="orderInput" />
            </div>
            <input asp-page-handler="Order" class="width100 btn btn-lg btn-primary" type="submit" value="Submit" />
        </form>
    </aside>
    <div class="mangas">
        @foreach (var item in Model.Manga)
        {

            <div class="manga-card">
                <a class="text-decoration-none" asp-page="./ExpandedManga" asp-route-id="@item.Id"><img src="@item.MainImageUrl"><div class="manga-card-text">@Html.DisplayFor(modelItem => item.Title)</div></a>
            </div>

        }

        <h2 class="text-black">Expanded Manga</h2>


        @foreach (var item in Model.FullManga)
        {

            <div id="@item.Id" onmouseover="onMangaHover(@item.Id)" onmouseout="onMangaOut(@item.Id)" class="manga-card">
                <a class="text-decoration-none" asp-page="./ExpandedManga" asp-route-id="@item.Id"><img src="@item.MangaImageUrl"><div class="manga-card-text">@Html.DisplayFor(modelItem => item.OriginTitle)</div></a>
            </div>
            <div id="@item.Id-mangaInfo" class="mangaInforOnHover">
                <h3>@item.OriginTitle</h3>
                <p>
                    <img class="mangaInfoImg" src="@item.MangaImageUrl">

                    <div class="mangaInfoCenter">
                        <div class="mangaInfoDesc">
                            <b><big>Description:</big></b> @item.Description
                        </div>
                        <b><big>Geners:</big></b> @string.Join(" ",item.Geners)
                    </div>
                    <div class="mangaInfoRight">
                        <b><big>Score:</big></b> @item.Score<br>
                        <b><big>Popularity:</big></b> @item.Popularity
                        <b><big>Ranked:</big></b> @item.Ranked<br>
                        @if (item.CountOfVolume == -1)
                        {
                            volumesUnknown = "<b><big>Volumes:</big></b> Unknown";
                            chaptersUnknown = "<b><big>Chapters:</big></b> Unknown";
                        }
                        else
                        {
                            volumesUnknown = $"<b><big>Volumes:</big></b> {@item.CountOfVolume}";
                            chaptersUnknown = $"<b><big>Chapters:</big></b> {@item.CountOfChapters}";
                        }
                        @Html.Raw(volumesUnknown)
                        @Html.Raw(chaptersUnknown)
                        <br>

                        @if (item.Status == Models.MangaStatus.Finished)
                        {
                            statusFinished = $"<b><big>Published:</big></b> {item.Published}";
                        }
                        else
                        {
                            statusFinished = $"<b><big>Status:</big></b> {item.Status}";
                        }
                        @Html.Raw(statusFinished)

                    </div>

                </p>
            </div>
        }
    </div>

</div>
