@page
@model MangaWeb.Pages.Manga_s_.IndexModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Index";
    var statusFinished = "";
    var volumesUnknown = "";
    var chaptersUnknown = "";
}

<h1>@ViewData["Title"]</h1>


<p>
    <a asp-page="Create">Create New</a>
</p>
<form>
    <p>
        <select asp-for="MangaGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>

</form>


<div class="mangas">
    @foreach (var item in Model.Manga)
    {

        <div class="manga-card">
            <a class="text-decoration-none" asp-page="./ExpandedManga" asp-route-id="@item.Id"><img src="@item.MainImageUrl"><div class="manga-card-text">@Html.DisplayFor(modelItem => item.Title)</div></a>
        </div>

    }
</div>
<h2 class="text-black">Expanded Manga</h2>
<h6>
    <form>
        Sort by:
        <select asp-for="SortByOption">
            <option>Title</option>
            <option>Score</option>
        </select>
        <input asp-page-handler="SortBy" class="w-100 btn btn-lg btn-primary" type="submit" value="Sort" />
    </form>
</h6>
<div class="mangas">
    @foreach (var item in Model.FullManga)
    {

        <div id="@item.Id" onmouseover="onMangaHover(@item.Id)" onmouseout="onMangaOut(@item.Id)" class="manga-card">
            <a class="text-decoration-none" asp-page="./ExpandedManga" asp-route-id="@item.Id"><img src="@item.MangaImageUrl"><div class="manga-card-text">@Html.DisplayFor(modelItem => item.OriginTitle)</div></a>
        </div>
        <div id="@item.Id-mangaInfo" class="mangaInforOnHover">
            <h3>@item.OriginTitle</h3>
            <p>
               <img class="mangaInfoImg" src="@item.MangaImageUrl" >

                <div class="mangaInfoCenter">
                    <div class="mangaInfoDesc">Description: @item.Description</div>
                    Geners: @string.Join(" ",item.Geners)
                </div>
                <div class="mangaInfoRight">
                    Score: @item.Score<br>
                    Popularity: @item.Popularity
                    Ranked: @item.Ranked<br>
                    @if (item.CountOfVolume == -1)
                    {
                        volumesUnknown = "Volumes: Unknown";
                        chaptersUnknown = "Chapters: Unknown";
                    }
                    else{
                        volumesUnknown = $"Volumes: {@item.CountOfVolume}";
                        chaptersUnknown = $"Chapters: {@item.CountOfChapters}";
                    }
                    @volumesUnknown
                    @chaptersUnknown
                    <br>
                    
                    @if (item.Status == Models.MangaStatus.Finished)
                    {
                        statusFinished = $"Published: {item.Published}";
                    }
                    else
                    {
                        statusFinished = $"Status: {item.Status}";
                    }
                    @statusFinished
                   
                </div>

            </p>
        </div>
    }
</div>

<script>
    function onMangaHover(itemId) {
        var manga = document.getElementById(itemId);
        var mangaInfoStyle = document.getElementById(itemId+"-mangaInfo").style;
        mangaInfoStyle.display = "block";
        var x = manga.offsetLeft;
        var y = manga.offsetTop;

        if (x < 1100) {
            mangaInfoStyle.left = (manga.offsetLeft + 275) + "px";
        }
        else {
            mangaInfoStyle.left = (manga.offsetLeft - 430) + "px";
        }

        mangaInfoStyle.top = (manga.offsetTop + 20) + "px";
    }

    function onMangaOut(itemId) {
        document.getElementById(itemId+"-mangaInfo").style.display = "none";

    }
</script>